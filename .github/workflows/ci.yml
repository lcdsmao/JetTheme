name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle.kts') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/versions.properties') }}

      - name: Check
        run: ./gradlew lint detekt

      # Check if there has been a binary incompatible change to the API.
      # If this change is intentional, run `./gradlew apiDump` and commit the new API files.
      # - name: Check binary compatibility
      #  run: ./gradlew apiCheck

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle.kts') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/versions.properties') }}

      - name: Unit tests
        run: ./gradlew testDebugUnitTest

  instrumentation-tests:
    name: Instrumentation tests
    runs-on: macos-latest
    timeout-minutes: 60
    strategy:
      fail-fast: true
      matrix:
        api-level: [ 21, 29 ]
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle.kts') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/versions.properties') }}

      - name: Instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86
          script: |
            adb logcat -c
            adb logcat *:E &
            ./gradlew connectedDebugAndroidTest

#  deploy-snapshot:
#    name: Deploy snapshot
#    runs-on: ubuntu-latest
#    timeout-minutes: 10
#    if: github.ref == 'refs/heads/main'
#    needs: [ check, unit-tests, instrumentation-tests ]
#    steps:
#      - uses: actions/checkout@v2
#      - uses: gradle/wrapper-validation-action@v1
#      - uses: actions/setup-java@v1
#        with:
#          java-version: 11
#      - uses: actions/cache@v2
#        with:
#          path: ~/.gradle/caches
#          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle.kts') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/versions.properties') }}
#
#      - name: Deploy Snapshot
#        env:
#          ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
#          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
#        run: ./tools/deploy_snapshot.sh
